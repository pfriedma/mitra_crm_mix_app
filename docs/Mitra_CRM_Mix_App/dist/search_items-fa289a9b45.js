searchNodes=[{"ref":"MitraCrm.html","title":"MitraCrm","type":"module","doc":"Documentation for MitraCrm."},{"ref":"MitraCrm.html#hello/0","title":"MitraCrm.hello/0","type":"function","doc":"Hello world. Examples iex&gt; MitraCrm.hello() :world"},{"ref":"MitraCrm.Crm.html","title":"MitraCrm.Crm","type":"module","doc":"A process for handling a CRM activity. Manages stakeholders and their associated data."},{"ref":"MitraCrm.Crm.html#add_engagement/3","title":"MitraCrm.Crm.add_engagement/3","type":"function","doc":"Add an %Engagement{} specfied by engagement to the stakeholder in CRM process pid. returns {:ok, [%Stakeholders{}]}."},{"ref":"MitraCrm.Crm.html#add_new_engagement/5","title":"MitraCrm.Crm.add_new_engagement/5","type":"function","doc":"Adds an engagement with name engagement_name, due on due_date of the type specified by type_name the stakeholder at crm processes pid. type_name should be one of the type names returned by get_engagement_types. returns `{:ok, [%Stakeholders{}]}."},{"ref":"MitraCrm.Crm.html#add_stakeholder/2","title":"MitraCrm.Crm.add_stakeholder/2","type":"function","doc":""},{"ref":"MitraCrm.Crm.html#add_stakeholder_raw/2","title":"MitraCrm.Crm.add_stakeholder_raw/2","type":"function","doc":"Add a %Stakeholder{} struct specified by stakeholder to the CRM process at pid. returns {:ok, [%Stakeholders{}]}"},{"ref":"MitraCrm.Crm.html#child_spec/1","title":"MitraCrm.Crm.child_spec/1","type":"function","doc":"Returns a specification to start this module under a supervisor. See Supervisor."},{"ref":"MitraCrm.Crm.html#defer_engagement/3","title":"MitraCrm.Crm.defer_engagement/3","type":"function","doc":"Defers the engagement of stakeholder by deferrment. Creates a new engement with the same information as the original but with the date pushed out. Marks the original engagement&#39;s state to deferred. returns `{:ok, [%Stakeholders{}]}."},{"ref":"MitraCrm.Crm.html#from_json/1","title":"MitraCrm.Crm.from_json/1","type":"function","doc":""},{"ref":"MitraCrm.Crm.html#from_json!/1","title":"MitraCrm.Crm.from_json!/1","type":"function","doc":""},{"ref":"MitraCrm.Crm.html#get_engagement_types/1","title":"MitraCrm.Crm.get_engagement_types/1","type":"function","doc":"Asks the Crm processes at pid for its stored engagement types. returns {:ok, [%EngagementType{}]}"},{"ref":"MitraCrm.Crm.html#get_neglected_stakeholders/3","title":"MitraCrm.Crm.get_neglected_stakeholders/3","type":"function","doc":"Gets [%Stakeholder{}]s who have not been contacted in past_threshold days or will be contacted within future_threshold days. returns {:ok, [%Stakeholder{}]}."},{"ref":"MitraCrm.Crm.html#get_stakeholder_by_uuid/2","title":"MitraCrm.Crm.get_stakeholder_by_uuid/2","type":"function","doc":""},{"ref":"MitraCrm.Crm.html#get_stakeholders/1","title":"MitraCrm.Crm.get_stakeholders/1","type":"function","doc":"Get the stakeholders from the CRM processes at pid. returns `{:ok, [%Stakeholders{}]}"},{"ref":"MitraCrm.Crm.html#get_upcoming_dates/1","title":"MitraCrm.Crm.get_upcoming_dates/1","type":"function","doc":"Gets [%Stakeholder{}]s who have not been contacted in past_threshold days or will be contacted within future_threshold days. returns {:ok, [%Stakeholder{}]}."},{"ref":"MitraCrm.Crm.html#handle_call/3","title":"MitraCrm.Crm.handle_call/3","type":"function","doc":"adds an engagement to the stakeholder"},{"ref":"MitraCrm.Crm.html#init/1","title":"MitraCrm.Crm.init/1","type":"function","doc":"Invoked when the server is started. start_link/3 or start/3 will block until it returns. init_arg is the argument term (second argument) passed to start_link/3. Returning {:ok, state} will cause start_link/3 to return {:ok, pid} and the process to enter its loop. Returning {:ok, state, timeout} is similar to {:ok, state} except handle_info(:timeout, state) will be called after timeout milliseconds if no messages are received within the timeout. Returning {:ok, state, :hibernate} is similar to {:ok, state} except the process is hibernated before entering the loop. See c:handle_call/3 for more information on hibernation. Returning {:ok, state, {:continue, continue}} is similar to {:ok, state} except that immediately after entering the loop the c:handle_continue/2 callback will be invoked with the value continue as first argument. Returning :ignore will cause start_link/3 to return :ignore and the process will exit normally without entering the loop or calling c:terminate/2. If used when part of a supervision tree the parent supervisor will not fail to start nor immediately try to restart the GenServer. The remainder of the supervision tree will be started and so the GenServer should not be required by other processes. It can be started later with Supervisor.restart_child/2 as the child specification is saved in the parent supervisor. The main use cases for this are: The GenServer is disabled by configuration but might be enabled later. An error occurred and it will be handled by a different mechanism than the Supervisor. Likely this approach involves calling Supervisor.restart_child/2 after a delay to attempt a restart. Returning {:stop, reason} will cause start_link/3 to return {:error, reason} and the process to exit with reason reason without entering the loop or calling c:terminate/2. Callback implementation for GenServer.init/1."},{"ref":"MitraCrm.Crm.html#load_stakeholders_from_file/2","title":"MitraCrm.Crm.load_stakeholders_from_file/2","type":"function","doc":"loads stakeholders as JSON data from filename. returns {:ok, stakeholders}."},{"ref":"MitraCrm.Crm.html#load_stakeholders_from_file!/2","title":"MitraCrm.Crm.load_stakeholders_from_file!/2","type":"function","doc":"Loads stakeholders as JSON data from filename. Returns {:ok,}."},{"ref":"MitraCrm.Crm.html#load_state_file/2","title":"MitraCrm.Crm.load_state_file/2","type":"function","doc":"Teslls the crm process of pid to load state from filename. returns {:ok, state}."},{"ref":"MitraCrm.Crm.html#load_state_file!/2","title":"MitraCrm.Crm.load_state_file!/2","type":"function","doc":"Teslls the crm process of pid to load state from filename. returns {:ok}."},{"ref":"MitraCrm.Crm.html#load_state_proc/1","title":"MitraCrm.Crm.load_state_proc/1","type":"function","doc":""},{"ref":"MitraCrm.Crm.html#persist_state/2","title":"MitraCrm.Crm.persist_state/2","type":"function","doc":"Tells the Crm proc at pid to write its state to filename. returns {:ok}."},{"ref":"MitraCrm.Crm.html#persist_state_pid/1","title":"MitraCrm.Crm.persist_state_pid/1","type":"function","doc":""},{"ref":"MitraCrm.Crm.html#put_engagement_type/3","title":"MitraCrm.Crm.put_engagement_type/3","type":"function","doc":"Adds a new %EngagementType{} with the type name of type and description to the Crm processes at pid. returns `{:ok, [%EngagementType{}]}."},{"ref":"MitraCrm.Crm.html#start_link/1","title":"MitraCrm.Crm.start_link/1","type":"function","doc":"Starts up a Crm process specified by id, which should probably map to something like ther user&#39;s id. returns {:ok, pid}"},{"ref":"MitraCrm.Crm.html#start_link/3","title":"MitraCrm.Crm.start_link/3","type":"function","doc":""},{"ref":"MitraCrm.Crm.html#to_json/1","title":"MitraCrm.Crm.to_json/1","type":"function","doc":""},{"ref":"MitraCrm.Crm.html#to_json!/1","title":"MitraCrm.Crm.to_json!/1","type":"function","doc":""},{"ref":"MitraCrm.Crm.html#upadte_stakeholder/2","title":"MitraCrm.Crm.upadte_stakeholder/2","type":"function","doc":""},{"ref":"MitraCrm.CrmStatePersistance.html","title":"MitraCrm.CrmStatePersistance","type":"module","doc":"This is a persistance server for CRM processes, handles saving and retreiving a CRM processes state"},{"ref":"MitraCrm.CrmStatePersistance.html#child_spec/1","title":"MitraCrm.CrmStatePersistance.child_spec/1","type":"function","doc":"Returns a specification to start this module under a supervisor. See Supervisor."},{"ref":"MitraCrm.CrmStatePersistance.html#handle_call/3","title":"MitraCrm.CrmStatePersistance.handle_call/3","type":"function","doc":"Genserver handler forwrite Writes data to filename."},{"ref":"MitraCrm.CrmStatePersistance.html#init/1","title":"MitraCrm.CrmStatePersistance.init/1","type":"function","doc":"Invoked when the server is started. start_link/3 or start/3 will block until it returns. init_arg is the argument term (second argument) passed to start_link/3. Returning {:ok, state} will cause start_link/3 to return {:ok, pid} and the process to enter its loop. Returning {:ok, state, timeout} is similar to {:ok, state} except handle_info(:timeout, state) will be called after timeout milliseconds if no messages are received within the timeout. Returning {:ok, state, :hibernate} is similar to {:ok, state} except the process is hibernated before entering the loop. See c:handle_call/3 for more information on hibernation. Returning {:ok, state, {:continue, continue}} is similar to {:ok, state} except that immediately after entering the loop the c:handle_continue/2 callback will be invoked with the value continue as first argument. Returning :ignore will cause start_link/3 to return :ignore and the process will exit normally without entering the loop or calling c:terminate/2. If used when part of a supervision tree the parent supervisor will not fail to start nor immediately try to restart the GenServer. The remainder of the supervision tree will be started and so the GenServer should not be required by other processes. It can be started later with Supervisor.restart_child/2 as the child specification is saved in the parent supervisor. The main use cases for this are: The GenServer is disabled by configuration but might be enabled later. An error occurred and it will be handled by a different mechanism than the Supervisor. Likely this approach involves calling Supervisor.restart_child/2 after a delay to attempt a restart. Returning {:stop, reason} will cause start_link/3 to return {:error, reason} and the process to exit with reason reason without entering the loop or calling c:terminate/2. Callback implementation for GenServer.init/1."},{"ref":"MitraCrm.CrmStatePersistance.html#load/1","title":"MitraCrm.CrmStatePersistance.load/1","type":"function","doc":""},{"ref":"MitraCrm.CrmStatePersistance.html#load/2","title":"MitraCrm.CrmStatePersistance.load/2","type":"function","doc":"Tells the Persistance process specified by pid to load an individual persistance file (JSON encoded) from filename Returns {:ok, state}."},{"ref":"MitraCrm.CrmStatePersistance.html#load/3","title":"MitraCrm.CrmStatePersistance.load/3","type":"function","doc":"Tells the Persistance process specified by pid to load the persistance file (JSON encoded) from filename and returns the state whoose %{user: %{id: }} map has the value specified by id. Returns {:ok, state}. if state found {:error, :not_found} otherwise."},{"ref":"MitraCrm.CrmStatePersistance.html#load_state_from_file/1","title":"MitraCrm.CrmStatePersistance.load_state_from_file/1","type":"function","doc":"Loads the filename as a stream and returns the result of calling Crm.from_json() on it"},{"ref":"MitraCrm.CrmStatePersistance.html#load_state_from_file/2","title":"MitraCrm.CrmStatePersistance.load_state_from_file/2","type":"function","doc":"Loads in the filename and filters the lines to where %{user: %{id: x}} = id Does not currently de-duplicate. Returns {:ok, state}."},{"ref":"MitraCrm.CrmStatePersistance.html#load_state_from_file!/1","title":"MitraCrm.CrmStatePersistance.load_state_from_file!/1","type":"function","doc":""},{"ref":"MitraCrm.CrmStatePersistance.html#load_state_from_file!/2","title":"MitraCrm.CrmStatePersistance.load_state_from_file!/2","type":"function","doc":""},{"ref":"MitraCrm.CrmStatePersistance.html#replace_in_file/2","title":"MitraCrm.CrmStatePersistance.replace_in_file/2","type":"function","doc":""},{"ref":"MitraCrm.CrmStatePersistance.html#start_link/0","title":"MitraCrm.CrmStatePersistance.start_link/0","type":"function","doc":""},{"ref":"MitraCrm.CrmStatePersistance.html#start_link/1","title":"MitraCrm.CrmStatePersistance.start_link/1","type":"function","doc":""},{"ref":"MitraCrm.CrmStatePersistance.html#write/2","title":"MitraCrm.CrmStatePersistance.write/2","type":"function","doc":""},{"ref":"MitraCrm.CrmStatePersistance.html#write/3","title":"MitraCrm.CrmStatePersistance.write/3","type":"function","doc":"Tells the Persistance process specified by pid to write out state data to filename as JSON. Appends to file. Returns `{:ok}"},{"ref":"MitraCrm.CrmStatePersistance.html#write_state_to_file/2","title":"MitraCrm.CrmStatePersistance.write_state_to_file/2","type":"function","doc":"Writes the state of a Crm process to filename as JSON encoded data. returns {:ok} or err."},{"ref":"MitraCrm.Engagement.html","title":"MitraCrm.Engagement","type":"module","doc":""},{"ref":"MitraCrm.Engagement.html#defer_and_update_engagements/3","title":"MitraCrm.Engagement.defer_and_update_engagements/3","type":"function","doc":""},{"ref":"MitraCrm.Engagement.html#defer_engagement/2","title":"MitraCrm.Engagement.defer_engagement/2","type":"function","doc":""},{"ref":"MitraCrm.Engagement.html#get_upcoming_engagements/1","title":"MitraCrm.Engagement.get_upcoming_engagements/1","type":"function","doc":""},{"ref":"MitraCrm.Engagement.html#get_upcoming_engagements/2","title":"MitraCrm.Engagement.get_upcoming_engagements/2","type":"function","doc":""},{"ref":"MitraCrm.Engagement.html#get_upcoming_engagements!/1","title":"MitraCrm.Engagement.get_upcoming_engagements!/1","type":"function","doc":""},{"ref":"MitraCrm.Engagement.html#get_upcoming_engagements!/2","title":"MitraCrm.Engagement.get_upcoming_engagements!/2","type":"function","doc":""},{"ref":"MitraCrm.Engagement.html#last_engagement/1","title":"MitraCrm.Engagement.last_engagement/1","type":"function","doc":""},{"ref":"MitraCrm.Engagement.html#new/3","title":"MitraCrm.Engagement.new/3","type":"function","doc":""},{"ref":"MitraCrm.Engagement.html#new/4","title":"MitraCrm.Engagement.new/4","type":"function","doc":""},{"ref":"MitraCrm.Engagement.html#sort_engagements/1","title":"MitraCrm.Engagement.sort_engagements/1","type":"function","doc":""},{"ref":"MitraCrm.Engagement.html#update_engagements/3","title":"MitraCrm.Engagement.update_engagements/3","type":"function","doc":""},{"ref":"MitraCrm.EngagementType.html","title":"MitraCrm.EngagementType","type":"module","doc":""},{"ref":"MitraCrm.EngagementType.html#get_default_engaement_types/0","title":"MitraCrm.EngagementType.get_default_engaement_types/0","type":"function","doc":""},{"ref":"MitraCrm.EngagementType.html#get_engagement_types/1","title":"MitraCrm.EngagementType.get_engagement_types/1","type":"function","doc":""},{"ref":"MitraCrm.EngagementType.html#lookup_type/1","title":"MitraCrm.EngagementType.lookup_type/1","type":"function","doc":""},{"ref":"MitraCrm.EngagementType.html#lookup_type!/1","title":"MitraCrm.EngagementType.lookup_type!/1","type":"function","doc":""},{"ref":"MitraCrm.Stakeholder.html","title":"MitraCrm.Stakeholder","type":"module","doc":"This is the Stakeholder module. Handles data of individual stakeholder."},{"ref":"MitraCrm.Stakeholder.html#add_engagement_to_stakeholders_timeline/2","title":"MitraCrm.Stakeholder.add_engagement_to_stakeholders_timeline/2","type":"function","doc":"Updates multiple stakeholders adding engagement to each. Returns [stakeholder]."},{"ref":"MitraCrm.Stakeholder.html#add_engagement_to_timeline/2","title":"MitraCrm.Stakeholder.add_engagement_to_timeline/2","type":"function","doc":"Updates stakeholder with a new engagement. Returns {:ok, stakeholder}."},{"ref":"MitraCrm.Stakeholder.html#exists?/2","title":"MitraCrm.Stakeholder.exists?/2","type":"function","doc":""},{"ref":"MitraCrm.Stakeholder.html#exists?/3","title":"MitraCrm.Stakeholder.exists?/3","type":"function","doc":""},{"ref":"MitraCrm.Stakeholder.html#from_json/1","title":"MitraCrm.Stakeholder.from_json/1","type":"function","doc":"Imports a stakeholder from json. Returns {:ok, stakeholder}."},{"ref":"MitraCrm.Stakeholder.html#from_json!/1","title":"MitraCrm.Stakeholder.from_json!/1","type":"function","doc":"Imports a stakeholder from json. Returns stakeholder."},{"ref":"MitraCrm.Stakeholder.html#get_all_stakeholder_dates/1","title":"MitraCrm.Stakeholder.get_all_stakeholder_dates/1","type":"function","doc":"Gets the important upcoming dates for stakeholders. Returns %{engagements: [%Engagement{}], important_dates: [%StakeholderDate{}]}."},{"ref":"MitraCrm.Stakeholder.html#get_neglected_stakeholders/3","title":"MitraCrm.Stakeholder.get_neglected_stakeholders/3","type":"function","doc":"Determines if any stakeholders in stakeholders haven&#39;t been contacted in a while. Returns [%Stakeholder{}] if the stakeholder hasn&#39;t been engaged since past_threshold or will be engaged before future_threshold (in days)."},{"ref":"MitraCrm.Stakeholder.html#get_stakeholder_by_name/2","title":"MitraCrm.Stakeholder.get_stakeholder_by_name/2","type":"function","doc":"Returns the first %Stakeholder{} with name from an array of stakeholders. Returns {:ok, stakeholder} or {:error, :not_found}"},{"ref":"MitraCrm.Stakeholder.html#get_stakeholder_by_uuid/2","title":"MitraCrm.Stakeholder.get_stakeholder_by_uuid/2","type":"function","doc":""},{"ref":"MitraCrm.Stakeholder.html#get_upcoming_dates/1","title":"MitraCrm.Stakeholder.get_upcoming_dates/1","type":"function","doc":"Gets upcomming dates for stakeholder. Returns {:ok, [%StakeholderDate]}."},{"ref":"MitraCrm.Stakeholder.html#get_upcoming_dates!/1","title":"MitraCrm.Stakeholder.get_upcoming_dates!/1","type":"function","doc":"Gets upcomming dates for stakeholder. Returns [%StakeholderDate]."},{"ref":"MitraCrm.Stakeholder.html#neglected_stakeholder?/3","title":"MitraCrm.Stakeholder.neglected_stakeholder?/3","type":"function","doc":"Determines if any stakeholder hasn&#39;t been contacted in a while. Returns true if the stakeholder hasn&#39;t been engaged since past_threshold or will be engaged before future_threshold (in days)."},{"ref":"MitraCrm.Stakeholder.html#new/1","title":"MitraCrm.Stakeholder.new/1","type":"function","doc":"Creates a new stakeholder with the given_name and family_name. Returns {:ok, stakeholder}."},{"ref":"MitraCrm.Stakeholder.html#new/2","title":"MitraCrm.Stakeholder.new/2","type":"function","doc":""},{"ref":"MitraCrm.Stakeholder.html#new_concern/4","title":"MitraCrm.Stakeholder.new_concern/4","type":"function","doc":"Updates stakeholder with a new concern specified by the concerns name, a description of the concern, and the importance of the concern (Range[0..9]). Returns {:ok, stakeholder}."},{"ref":"MitraCrm.Stakeholder.html#new_date/5","title":"MitraCrm.Stakeholder.new_date/5","type":"function","doc":"Updates stakeholder with a new StakeholderDate specified by: Parameters date: date of the event in ISO-8601 format string. description: description of the date (e.g. &quot;Pet&#39;s Birthday&quot;). reminder: how far in advance (in integer days) a reminder should occur. annual: a true/false parameter of whether the event is annual. Returns {:ok, stakeholder}."},{"ref":"MitraCrm.Stakeholder.html#replace_stakeholder/2","title":"MitraCrm.Stakeholder.replace_stakeholder/2","type":"function","doc":""},{"ref":"MitraCrm.Stakeholder.html#to_json/1","title":"MitraCrm.Stakeholder.to_json/1","type":"function","doc":"Exports stakeholder to json. Returns {:ok, json}."},{"ref":"MitraCrm.Stakeholder.html#to_json!/1","title":"MitraCrm.Stakeholder.to_json!/1","type":"function","doc":"Exports stakeholder to json. Returns json."},{"ref":"MitraCrm.Stakeholder.html#update_attributes/3","title":"MitraCrm.Stakeholder.update_attributes/3","type":"function","doc":"Updates stakeholder with a new attribute whoose value is value. Returns {:ok, stakeholder}."},{"ref":"MitraCrm.Stakeholder.html#update_concerns/2","title":"MitraCrm.Stakeholder.update_concerns/2","type":"function","doc":"Updates stakeholder with a new concern. Returns {:ok, stakeholder}."},{"ref":"MitraCrm.Stakeholder.html#update_contact/3","title":"MitraCrm.Stakeholder.update_contact/3","type":"function","doc":"Updates stakeholder contact information, setting contact_title to value. Returns {:ok, stakeholder}."},{"ref":"MitraCrm.Stakeholder.html#update_dates/2","title":"MitraCrm.Stakeholder.update_dates/2","type":"function","doc":"Updates stakeholder with a date. Returns {:ok, stakeholder}."},{"ref":"MitraCrm.Stakeholder.html#update_name/2","title":"MitraCrm.Stakeholder.update_name/2","type":"function","doc":""},{"ref":"MitraCrm.Stakeholder.html#update_relationship/2","title":"MitraCrm.Stakeholder.update_relationship/2","type":"function","doc":"Updates stakeholder with a new relationship. Returns {:ok, stakeholder}."},{"ref":"MitraCrm.Stakeholder.html#update_relationship_metric/4","title":"MitraCrm.Stakeholder.update_relationship_metric/4","type":"function","doc":"Updates stakeholder relationship dimension to the value and focus specified. Parameters dimension is one of [:credability, :empathy, :reliability, :stakeholderfocus]. value is in Range[0..9]. focus is whether or not you are focusing on building that relationship dimension. Notes :stakeholderfocus is a metric around how much you focus on the stakeholder&#39;s needs as opposed to your own. Returns {:ok, stakeholder}."},{"ref":"MitraCrm.StakeholderConcern.html","title":"MitraCrm.StakeholderConcern","type":"module","doc":""},{"ref":"MitraCrm.StakeholderConcern.html#new/3","title":"MitraCrm.StakeholderConcern.new/3","type":"function","doc":""},{"ref":"MitraCrm.StakeholderDate.html","title":"MitraCrm.StakeholderDate","type":"module","doc":""},{"ref":"MitraCrm.StakeholderDate.html#is_upcoming/1","title":"MitraCrm.StakeholderDate.is_upcoming/1","type":"function","doc":""},{"ref":"MitraCrm.StakeholderDate.html#new/4","title":"MitraCrm.StakeholderDate.new/4","type":"function","doc":""},{"ref":"MitraCrm.StakeholderDate.html#new_from_str/4","title":"MitraCrm.StakeholderDate.new_from_str/4","type":"function","doc":""},{"ref":"MitraCrm.StakeholderMetadata.html","title":"MitraCrm.StakeholderMetadata","type":"module","doc":"This is the Stakeholder Metadata module."},{"ref":"MitraCrm.StakeholderMetadata.html#add_crm_uid/2","title":"MitraCrm.StakeholderMetadata.add_crm_uid/2","type":"function","doc":""},{"ref":"MitraCrm.StakeholderMetadata.html#del_crm_uid/2","title":"MitraCrm.StakeholderMetadata.del_crm_uid/2","type":"function","doc":""},{"ref":"MitraCrm.StakeholderMetadata.html#new/0","title":"MitraCrm.StakeholderMetadata.new/0","type":"function","doc":""},{"ref":"MitraCrm.StakeholderMetadata.html#new/1","title":"MitraCrm.StakeholderMetadata.new/1","type":"function","doc":""},{"ref":"MitraCrm.StakeholderMetadata.html#update_meta_date/1","title":"MitraCrm.StakeholderMetadata.update_meta_date/1","type":"function","doc":""},{"ref":"MitraCrm.StakeholderName.html","title":"MitraCrm.StakeholderName","type":"module","doc":"This is the Stakeholder module. Handles data of individual stakeholder."},{"ref":"MitraCrm.StakeholderName.html#new/1","title":"MitraCrm.StakeholderName.new/1","type":"function","doc":""},{"ref":"MitraCrm.StakeholderName.html#new/2","title":"MitraCrm.StakeholderName.new/2","type":"function","doc":""},{"ref":"MitraCrm.StakeholderPersistance.html","title":"MitraCrm.StakeholderPersistance","type":"module","doc":""},{"ref":"MitraCrm.StakeholderPersistance.html#append_stakeholders_to_file/2","title":"MitraCrm.StakeholderPersistance.append_stakeholders_to_file/2","type":"function","doc":""},{"ref":"MitraCrm.StakeholderPersistance.html#load_stakeholders_from_file/1","title":"MitraCrm.StakeholderPersistance.load_stakeholders_from_file/1","type":"function","doc":""},{"ref":"MitraCrm.StakeholderPersistance.html#load_stakeholders_from_file!/1","title":"MitraCrm.StakeholderPersistance.load_stakeholders_from_file!/1","type":"function","doc":""},{"ref":"MitraCrm.StakeholderPersistance.html#ovewrite_stakeholders_to_file/2","title":"MitraCrm.StakeholderPersistance.ovewrite_stakeholders_to_file/2","type":"function","doc":""},{"ref":"MitraCrm.StakeholderPersistance.html#write_stakeholders_to_file/3","title":"MitraCrm.StakeholderPersistance.write_stakeholders_to_file/3","type":"function","doc":""},{"ref":"MitraCrm.StakeholderRelationship.html","title":"MitraCrm.StakeholderRelationship","type":"module","doc":""},{"ref":"MitraCrm.StakeholderRelationship.html#new/0","title":"MitraCrm.StakeholderRelationship.new/0","type":"function","doc":""},{"ref":"MitraCrm.StakeholderRelationship.html#update_relationship/4","title":"MitraCrm.StakeholderRelationship.update_relationship/4","type":"function","doc":""},{"ref":"MitraCrm.StakeholderRelationshipCosts.html","title":"MitraCrm.StakeholderRelationshipCosts","type":"module","doc":""},{"ref":"MitraCrm.StakeholderRelationshipCosts.html#apply_cost/2","title":"MitraCrm.StakeholderRelationshipCosts.apply_cost/2","type":"function","doc":""},{"ref":"MitraCrm.StakeholderRelationshipCosts.html#cost/1","title":"MitraCrm.StakeholderRelationshipCosts.cost/1","type":"function","doc":""},{"ref":"MitraCrm.StakeholderRelationshipValue.html","title":"MitraCrm.StakeholderRelationshipValue","type":"module","doc":""},{"ref":"MitraCrm.StakeholderRelationshipValue.html#new/0","title":"MitraCrm.StakeholderRelationshipValue.new/0","type":"function","doc":""},{"ref":"MitraCrm.StakeholderRelationshipValue.html#new/2","title":"MitraCrm.StakeholderRelationshipValue.new/2","type":"function","doc":""}]